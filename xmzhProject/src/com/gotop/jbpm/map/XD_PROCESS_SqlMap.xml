<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="XD_PROCESS_SqlMap" >
 <resultMap id="abatorgenerated_XdProcess_Result" class="com.gotop.jbpm.model.XdProcessTaskAssignee" >
    <!--HashMap方式返回全表-->
    <result column="ID" property="id" jdbcType="DECIMAL" />
    <result column="EXECUTION_ID" property="executionId" jdbcType="VARCHAR" />
    <result column="assignee" property="assignee" jdbcType="VARCHAR" />
    <result column="TASK_ID" property="taskId" jdbcType="VARCHAR" />
    <result column="PRE_TASK_ID" property="preTaskId" jdbcType="VARCHAR" />
    <result column="PRE_TASK_ASSINGEE" property="preTaskAssingee" jdbcType="DECIMAL" />
    <result column="PRE_TASK_ORG" property="preTaskOrg" jdbcType="DECIMAL" />
    <result column="PRE_TASK_TIME" property="preTaskTime" jdbcType="VARCHAR" />
    <result column="NEXT_TASK_ID" property="nextTaskId" jdbcType="VARCHAR" />
    <result column="BUSINESS_KEY" property="businessKey" jdbcType="DECIMAL" />
    <result column="BUSINESS_TYPE" property="businessType" jdbcType="VARCHAR" />
    <result column="preTaskOrgName" property="preTaskOrgName" jdbcType="VARCHAR" />
     <result column="preTaskAssingeeName" property="preTaskAssingeeName" jdbcType="VARCHAR" />
     <result column="processName" property="processName" jdbcType="VARCHAR" />
     <result column="BUSINESS_TITLE" property="businessTitle" jdbcType="VARCHAR" />
     <result column="PROCESS_TASK_ASSIGNEE_ID" property="processTaskAssigneeId" jdbcType="DECIMAL" />
     <result column="PARENT_ID" property="parentId" jdbcType="DECIMAL" />
     <result column="ISCHILD" property="isChild" jdbcType="VARCHAR" />
     <result column="BUSINESS_NAME" property="businessName" jdbcType="VARCHAR" />
     <result column="CUST_NAME" property="custName" jdbcType="VARCHAR" />
     <result column="ONECATEGORY" property="oneCategory" jdbcType="VARCHAR" />
     <result column="LOANCATEGORY" property="loanCategory" jdbcType="VARCHAR" />
     <result column="REPORTCNT" property="reportcnt" jdbcType="VARCHAR" />
     <result column="REPORTTIME" property="reportTime" jdbcType="VARCHAR" />
      <result column="ISURGENT" property="isurgent" jdbcType="VARCHAR" />
      <result column="START_TIME" property="start_time" jdbcType="VARCHAR" />
      <result column="END_TIME" property="end_time" jdbcType="VARCHAR" />
      <result column="CURR_TIME" property="curr_time" jdbcType="VARCHAR" />    
  </resultMap>
  
 <resultMap id="abatorgenerated_XdProcess_HashMapResult2" class="java.util.HashMap" >
    <!--HashMap方式返回全表-->
    <result column="ID" property="id" jdbcType="DECIMAL" />
    <result column="DEFINITION_ID" property="definitionId" jdbcType="VARCHAR" />
    <result column="PROCESS_NAME" property="processName" jdbcType="VARCHAR" />
    <result column="BUSINESS_TYPE" property="businessType" jdbcType="VARCHAR" />
    <result column="STATE" property="state" jdbcType="VARCHAR" />
    <result column="UPLOAD_TIME" property="uploadTime" jdbcType="VARCHAR" />
 </resultMap>
 
 <resultMap id="abatorgenerated_XdProcess_HashMapResult3" class="java.util.HashMap" >
    <!--HashMap方式返回全表-->
     <result column="ONECATEGORY" property="oneCategory" jdbcType="VARCHAR" />
 </resultMap>
 
  <resultMap id="abatorgenerated_XdProcess_HashMapResult4" class="java.util.HashMap" >
    <!--HashMap方式返回全表-->
     <result column="LOANCATEGORY" property="loanCategory" jdbcType="VARCHAR" />
 </resultMap>
 
 <resultMap id="abatorgenerated_XdProcess_HashMapResult5" class="java.util.HashMap" >
    <!--HashMap方式返回全表-->
    <result column="EXECUTION_ID" property="executionId" jdbcType="VARCHAR" />
     <result column="processName" property="processName" jdbcType="VARCHAR" />
     <result column="CUST_NAME" property="custName" jdbcType="VARCHAR" />
     <result column="ONECATEGORY" property="oneCategory" jdbcType="VARCHAR" />
     <result column="LOANCATEGORY" property="loanCategory" jdbcType="VARCHAR" />
     <result column="APPLY_BAL" property="apply_bal" jdbcType="VARCHAR" />
     <result column="COORGANIZATION" property="coorganization" jdbcType="VARCHAR" />
     <result column="YXRY" property="yxry" jdbcType="VARCHAR" />
     <result column="YXRYJG" property="yxryjg" jdbcType="VARCHAR" />
     <result column="REPORTCNT" property="reportcnt" jdbcType="VARCHAR" />
  </resultMap>
  
  <resultMap id="abatorgenerated_WaterInfo_HashMapResult" class="java.util.HashMap" >
    <!--HashMap方式返回全表-->
    <result column="WATER_ID" property="waterId" jdbcType="DECIMAL" />
    <result column="FLOW_ID" property="flow_id" jdbcType="VARCHAR" />
     <result column="PROCESS_NAME" property="processName" jdbcType="VARCHAR" />
     <result column="CUST_NAME" property="custName" jdbcType="VARCHAR" />
     <result column="APPLY_BAL" property="apply_bal" jdbcType="VARCHAR" />
     <result column="ONECATEGORY" property="oneCategory" jdbcType="VARCHAR" />
     <result column="LOANCATEGORY" property="loanCategory" jdbcType="VARCHAR" />
     <result column="COORGANIZATION" property="coorganization" jdbcType="VARCHAR" />
      <result column="UPT_EMPID" property="uptEmpid" jdbcType="DECIMAL" />
     <result column="UPT_ORGCODE" property="uptOrgcode" jdbcType="VARCHAR" />
     <result column="UPT_TIME" property="uptTime" jdbcType="VARCHAR" />
      <result column="UPT_EMPNAME" property="uptEmpname" jdbcType="VARCHAR" />
     <result column="UPT_ORGNAME" property="uptOrgname" jdbcType="VARCHAR" />
     <result column="CYXRY" property="cyxry" jdbcType="VARCHAR" />
     <result column="CYXRYJG" property="cyxryjg" jdbcType="VARCHAR" />
     <result column="CREPORTCNT" property="creportcnt" jdbcType="VARCHAR" />
  </resultMap>
  
    <resultMap id="abatorgenerated_WorkTime_HashMapResult" class="java.util.HashMap" >
    <!--HashMap方式返回全表-->
    <result column="ID" property="id" jdbcType="DECIMAL" />
    <result column="MODEL_TABLENAME" property="model_tableName" jdbcType="VARCHAR" />
     <result column="WORKTIME" property="workTime" jdbcType="DOUBLE" />
     <result column="OP_EMPID" property="op_empid" jdbcType="DECIMAL" />
     <result column="OP_ORGCODE" property="op_orgcode" jdbcType="VARCHAR" />
     <result column="OP_TIME" property="op_time" jdbcType="VARCHAR" />
  </resultMap>
      <resultMap id="abatorgenerated_HashMapResult" class="com.gotop.jbpm.model.XdProcessTaskAssignee" >
    <result column="flow_id" property="executionId" jdbcType="VARCHAR" />
  </resultMap>
  
  <!--查询信贷流程 待办事项列表-->
  <select id="queryXdMyTodoList" resultMap="abatorgenerated_XdProcess_Result" parameterClass="java.util.HashMap" >
  with temp1 as /*查询JBPM4_HIST_ACTINST表流程上下节点名称*/
 (select a4.*, b2.activity_name_ as next_task_name
    from (SELECT a1.*, a3.activity_name_ as pre_task_name
            FROM JBPM4_HIST_ACTINST      a1,
                 T_PROCESS_TASK_ASSIGNEE a2,
                 JBPM4_HIST_ACTINST      a3
           where a1.activity_name_ = '收单派单'
             and a1.execution_ = a2.execution_id(+)
             and a1.htask_ = a2.next_task_id(+)
             and a2.execution_id = a3.execution_(+)
             and a2.pre_task_id = a3.htask_(+)) a4,
         T_PROCESS_TASK_ASSIGNEE b1,
         JBPM4_HIST_ACTINST b2
   where a4.execution_ = b1.execution_id(+)
     and a4.htask_ = b1.pre_task_id(+)
     and b1.execution_id = b2.execution_(+)
     and b1.next_task_id = b2.htask_(+)
 ),

temp2 as /*筛选出“收单派单”上个节点是“受理调查”的流程*/
(select a5.execution_,
       to_char(a5.start_, 'yyyymmddhh24miss') AS start_time1,
       to_char(a5.end_, 'yyyymmddhh24miss') AS end_time1
       
  from (SELECT temp1.*,
               ROW_NUMBER() OVER(PARTITION BY execution_ ORDER BY START_ DESC) AS RN
          from temp1
         where pre_task_name = '受理调查') a5
 where rn = 1),
 
 temp3 as /*筛选出“收单派单”上个节点是“受理调查”，并且下个节点是“审查一”或者“审批一”的流程*/
 (select a6.execution_,
       to_char(a6.start_, 'yyyymmddhh24miss') AS start_time2,
       to_char(a6.end_, 'yyyymmddhh24miss') AS end_time2
  from (SELECT temp1.*,
               ROW_NUMBER() OVER(PARTITION BY execution_ ORDER BY START_ DESC) AS RN
          from temp1
         where pre_task_name = '受理调查' and next_task_name in ('审查一','审批一')) a6
 where rn = 1
 ),
 
 temp as  /*查询JBPM4_HIST_ACTINST表流程本次报单和派单时间，本次指最近一次*/
 (select TT.execution_,
 case when TT.end_time1 is null then TT.start_time1 else TT.start_time2 end as start_time,
 case when TT.end_time1 is null then TT.end_time1 else TT.end_time2 end as end_time,
 to_char(sysdate, 'yyyymmddhh24miss') AS curr_time
  from
 (select temp2.*, temp3.start_time2, temp3.end_time2 
 from temp2, temp3
 where temp2.execution_ = temp3.execution_(+)) TT
 )
 
  select T13.*, temp.start_time, temp.end_time, temp.curr_time 
 from  (select T11.*, to_number(nvl(T12.REPORTCNT,'0')) as REPORTCNT, T12.REPORTTIME,
 			case when T12.ISURGENT = '0' then '0' else '1' end as ISURGENT
  from (select T9.*, T10.CUST_NAME, T10.ONECATEGORY, T10.LOANCATEGORY
          from (SELECT T1.ID,
                       T7.EXECUTION_ID_ as EXECUTION_ID,
                       t2.task_assignee_id as assignee,
                       T1.TASK_ID,
                       T1.PRE_TASK_ID,
                       T1.PRE_TASK_ASSINGEE,
                       T1.PRE_TASK_ORG,
                       to_char(TO_DATE(T1.PRE_TASK_TIME,
                                       'yyyy/MM/dd hh24:mi:ss'),
                               'yyyy-mm-dd hh24:mi:ss') AS PRE_TASK_TIME,
                       T1.NEXT_TASK_ID,
                       T1.BUSINESS_KEY,
                       T3.EMPNAME AS preTaskAssingeeName,
                       T4.ORGNAME AS preTaskOrgName,
                       T6.PROCESS_NAME AS processName,
                       T6.BUSINESS_TYPE AS BUSINESS_TYPE,
                       T2.PROCESS_TASK_ASSIGNEE_ID,
                       T2.PARENT_ID,
                       T2.ISCHILD,
                       T8.business_title as BUSINESS_TITLE,
                       a.dictname AS BUSINESS_NAME
                  FROM T_PROCESS_TASK_ASSIGNEE        T1,
                       T_PROCESS_TASK_ASSIGNEE_PERSON T2,
                       OM_EMPLOYEE                    T3,
                       OM_ORGANIZATION                T4,
                       JBPM4_EXECUTION                T5,
                       T_PROCESS_CONFIG               T6,
                       JBPM4_TASK                     T7,
                       T_PROCESS_BUSINESS             T8,
                       eos_dict_entry                 a,
                       eos_dict_type                  b
                 where T1.ID = T2.PROCESS_TASK_ASSIGNEE_ID
                   AND T1.PRE_TASK_ASSINGEE = T3.EMPID
                   AND T1.PRE_TASK_ORG = T4.ORGID
                   AND T5.PROCDEFID_ = T6.DEFINITION_ID
                   AND T5.ID_ = T7.EXECUTION_ID_
                   AND T2.TASK_ID = T7.DBID_
                   AND T7.STATE_ = 'open'
                   AND T1.EXECUTION_ID = T8.EXECUTION_ID
                   AND T1.Business_Type = a.dictid
                   AND a.dicttypeid = b.dicttypeid
                   AND b.dicttypeid = 'ZHPT_BUSINESS_TYPE'
                     <isNotNull prepend="and" property="relationids" >
           				T2.TASK_ASSIGNEE_ID IN ($relationids$)
      				</isNotNull>
                   and T8.business_type = '88') T9
          left join T_GENERALPROCESS_MODELONE T10
            on T9.EXECUTION_ID = T10.FLOW_ID) T11
  left join T_GENERALPROCESS_MODELTHREE T12
    on T11.EXECUTION_ID = T12.FLOW_ID ) T13
    left join temp on t13.EXECUTION_ID = temp.EXECUTION_
    <dynamic prepend="where" >
   <isNotNull prepend="and" property="custName" >
           T13.CUST_NAME like '%'||'$custName$'||'%'
      		</isNotNull>
      		<isNotNull prepend="and" property="oneCategoryId" >
           	T13.oneCategory in(select dic.dictname from eos_dict_entry dic where dic.dicttypeid='PROCESS_onecategory' 
           	 and dic.dictid in($oneCategoryId$))
      		</isNotNull>
      		 <isNotNull prepend="and" property="loanCategoryId" >
           	 T13.loanCategory in(select dic.dictname from eos_dict_entry dic where dic.dicttypeid='PROCESS_credit_type' 
           	 and dic.dictid in($loanCategoryId$))
      		</isNotNull>
      		</dynamic>
      		order by T13.ISURGENT ASC, temp.start_time ASC, T13.REPORTCNT DESC
  </select>
  
   <select id="queryXdProcessList" resultMap="abatorgenerated_XdProcess_HashMapResult2" parameterClass="java.util.HashMap" >
   select t.ID,
       t.DEFINITION_ID,
       t.PROCESS_NAME,
       t.BUSINESS_TYPE,
       t.STATE,
       t.UPLOAD_TIME
  from T_PROCESS_CONFIG t
 where t.BUSINESS_TYPE = 88
 <isNotNull prepend="and" property="processName" >
  t.PROCESS_NAME like '%'||'$processName$'||'%'
 </isNotNull>
  order by t.ORDER_NO ASC
   </select>
   
    <select id="queryTimeDiff" resultClass="java.util.HashMap" parameterClass="java.lang.String" >
   select A9.execution_,
       
       case
         when A9.RN=1 and A9.PRE_TASK_NAME = '受理调查'  then  to_char(A9.start_, 'yyyymmddhh24miss')
       end as start_time,
       
       case
        <!--  when A9.RN=1 and A9.NEXT_TASK_NAME = '审查一' then to_char(A9.end_, 'yyyymmddhh24miss') -->
        when A9.RN=1 and A9.PRE_TASK_NAME = '受理调查'  then  to_char(A9.end_, 'yyyymmddhh24miss')
       end as end_time,
       
       to_char(sysdate, 'yyyymmddhh24miss') as curr_time
       
<!--  to_char(A9.start_, 'yyyy/mm/dd hh24:mi:ss') as start_time,
       to_char(A9.end_, 'yyyy/mm/dd hh24:mi:ss') as end_time,
       to_char(sysdate, 'yyyy/mm/dd hh24:mi:ss') as curr_time ,
       case
         when A9.RN=1 and A9.PRE_TASK_NAME = '受理调查' and A9.NEXT_TASK_NAME = '审查一' then
          round(to_date(to_char(A9.end_, 'yyyy/mm/dd hh24:mi:ss'),
                        'yyyy/mm/dd hh24:mi:ss') -
                to_date(to_char(A9.start_, 'yyyy/mm/dd hh24:mi:ss'),
                        'yyyy/mm/dd hh24:mi:ss'),
                2)
       end as time_Diff1,
       case
         when A9.RN=1 and A9.PRE_TASK_NAME = '受理调查' then
          round(sysdate - to_date(to_char(A9.start_, 'yyyy/mm/dd hh24:mi:ss'),
                                  'yyyy/mm/dd hh24:mi:ss'),
                2)
       end as time_Diff2,
       round(to_date(to_char(A9.start_, 'yyyy/mm/dd'),
                        'yyyy/mm/dd hh24:mi:ss')+1 -
                to_date(to_char(A9.start_, 'yyyy/mm/dd hh24:mi:ss'),
                        'yyyy/mm/dd hh24:mi:ss'),
                2) as startD_diff,
        round(to_date(to_char(A9.end_, 'yyyy/mm/dd hh24:mi:ss'),
                        'yyyy/mm/dd hh24:mi:ss') - 
                to_date(to_char(A9.end_, 'yyyy/mm/dd'),
                        'yyyy/mm/dd hh24:mi:ss'),
                2) as endD_diff,
         round(sysdate - 
                to_date(to_char(sysdate, 'yyyy/mm/dd'),
                        'yyyy/mm/dd hh24:mi:ss'),
                2) as currD_diff -->
  from ( select  AA.*,  ROW_NUMBER() OVER(PARTITION BY execution_  ORDER BY  START_ desc) RN  from 
  (select A7.*, A8.activity_name_ as NEXT_TASK_NAME
    from (select A5.*, A6.activity_name_ as PRE_TASK_NAME
          from (select A3.*, A4.NEXT_TASK_ID
                  from (select A1.*, A2.Pre_Task_Id
                          from (select A.*
                                  from (select  t.*
                                          from JBPM4_HIST_ACTINST t
                                         where t.execution_ =  '$executionId$'
                                           and activity_name_ = '收单派单') A
                                 ) A1
                          left join T_PROCESS_TASK_ASSIGNEE A2
                            on A1.execution_ = A2.execution_id
                           and A1.HTASK_ = A2.NEXT_TASK_ID) A3
                  left join T_PROCESS_TASK_ASSIGNEE A4
                    on A3.execution_ = A4.execution_id
                   and A3.HTASK_ = A4.PRE_TASK_ID) A5
               left join JBPM4_HIST_ACTINST A6 
               on A5.execution_ = A6.execution_ and A5.PRE_TASK_ID = A6.HTASK_) A7
             left join  JBPM4_HIST_ACTINST A8  
             on A7.execution_ = A8.execution_  and A7.NEXT_TASK_ID = A8.HTASK_ ) AA  ) A9 where rn=1
   </select>
   
   
   <select id="queryOneCategoryList" resultMap="abatorgenerated_XdProcess_HashMapResult3" parameterClass="java.util.HashMap" >
    select distinct (first_class) as ONECATEGORY  from T_GENERALPROCESS_CDTYPE t 
     <dynamic prepend="where" >
		 <isNotNull prepend="and" property="processName" >
		   t.process_name='$processName$'
		 </isNotNull>
		  <isNotNull prepend="and" property="oneCategoryId" >
		   t.first_class  in(select dic.dictname from eos_dict_entry dic where dic.dicttypeid='PROCESS_onecategory' 
           	 and dic.dictid in($oneCategoryId$))
		 </isNotNull>
  </dynamic>
  order by t.first_class ASC
   </select>
   
    <select id="queryOneCategoryList2" resultMap="abatorgenerated_XdProcess_HashMapResult3" parameterClass="java.util.HashMap" >
    select distinct (first_class) as ONECATEGORY  from T_GENERALPROCESS_CDTYPE t 
     <dynamic prepend="where" >
		 <isNotNull prepend="and" property="processName" >
		   t.process_name='$processName$'
		 </isNotNull>
		  <isNotNull prepend="and" property="oneCategory" >
		   t.first_class  = '$oneCategory$'
		 </isNotNull>
  </dynamic>
  order by t.first_class ASC
   </select>
   
   <select id="queryLoanCategoryList" resultMap="abatorgenerated_XdProcess_HashMapResult4" parameterClass="java.util.HashMap" >
   select credit_type as LOANCATEGORY from T_GENERALPROCESS_CDTYPE t 
 <dynamic prepend="where" >
		 <isNotNull prepend="and" property="processName" >
		   t.process_name='$processName$'
		 </isNotNull>
		  <isNotNull prepend="and" property="oneCategory" >
		   t.first_class='$oneCategory$'
		 </isNotNull>
		 <isNotNull prepend="and" property="loanCategory" >
		   t.credit_type='$loanCategory$'
		 </isNotNull>
  </dynamic>
  order by t.credit_type ASC
   </select>
   
   <insert id="insert" parameterClass="com.gotop.jbpm.model.XdCdtypeBean" >
       <selectKey resultClass="long" keyProperty="cdtypeid">
		SELECT T_GENERALPROCESS_CDTYPE_SEQ.NEXTVAL AS VALUE FROM DUAL
		</selectKey>
    insert into T_GENERALPROCESS_CDTYPE(CDTYPEID, PROCESS_NAME, FIRST_CLASS, CREDIT_TYPE, LIMIT_TIME)
    values (#cdtypeid:DECIMAL:-9999#,  #processName:VARCHAR#,  #oneCategory:VARCHAR#,  #loanCategory:VARCHAR#, #limit_time:VARCHAR#)
  </insert>
  
  <delete id="delete" parameterClass="com.gotop.jbpm.model.XdCdtypeBean" >
    delete from T_GENERALPROCESS_CDTYPE t
    where t.PROCESS_NAME = #processName:VARCHAR# 
   		<isNotNull prepend="and" property="oneCategory" >
		   t.FIRST_CLASS=#oneCategory:VARCHAR#
		 </isNotNull>
		  <isNotNull prepend="and" property="loanCategory" >
		   t.CREDIT_TYPE=#loanCategory:VARCHAR#
		 </isNotNull>
  </delete>
  
   <!--查询已经发起的信贷流程 列表，其结果与待办信贷流程相同-->
  <select id="queryXdStartProcessList" resultMap="abatorgenerated_XdProcess_HashMapResult5" parameterClass="java.util.HashMap" >
 select T11.EXECUTION_ID,
       T11.processName,
       T11.CUST_NAME,
       T11.ONECATEGORY,
       T11.LOANCATEGORY,
       T11.APPLY_BAL,
       T11.COORGANIZATION,
        T11.YXRY,
       T11.YXRYJG,
       T11.REPORTCNT
  from (
SELECT T1.EXECUTION_ID,
      t3.PROCESS_NAME as processName,
      t4.CUST_NAME,
			t4.ONECATEGORY,
			t4.LOANCATEGORY,
			t4.APPLY_BAL,
			t4.COORGANIZATION,
			 t4.YXRY,
      t4.YXRYJG,
      t5.REPORTCNT

from 
(
select c.*, d.cust_name
  from (select a.*, b.begin_orgid, b.begin_empid
          from (select t1.execution_id
                  from T_PROCESS_CONFIG    t,
                       t_process_business  t1,
                       JBPM4_HIST_PROCINST t2
                 where t.definition_id = t2.procdefid_
                   and t2.id_ = t1.execution_id
                   and t1.business_type = '88'
                   and t.state = '01') a
          left join T_GENERALPROCESS_MAIN b
            on a.execution_id = b.business_id) c
  left join t_generalprocess_modelone d
    on c.execution_id = d.flow_id
 where c.begin_orgid is not null
   and c.begin_empid is not null
   and d.cust_name is not null
   
)t1 
LEFT JOIN JBPM4_HIST_PROCINST t2 on T2.ID_=T1.EXECUTION_ID
LEFT JOIN T_PROCESS_CONFIG t3 on t3.DEFINITION_ID=t2.PROCDEFID_
LEFT JOIN T_GENERALPROCESS_MODELONE t4 ON T1.EXECUTION_ID = t4.FLOW_ID
LEFT JOIN T_GENERALPROCESS_MODELTHREE t5 on T1.EXECUTION_ID = t5.FLOW_ID

) T11

    <dynamic prepend="where" >
     
   <isNotNull prepend="and" property="custName" >
           T11.CUST_NAME like '%'||'$custName$'||'%'
      		</isNotNull>
      		<isNotNull prepend="and" property="oneCategoryId" >
           	T11.oneCategory in(select dic.dictname from eos_dict_entry dic where dic.dicttypeid='PROCESS_onecategory' 
           	 and dic.dictid in($oneCategoryId$))
      		</isNotNull>
      		 <isNotNull prepend="and" property="loanCategoryId" >
           	 T11.loanCategory in(select dic.dictname from eos_dict_entry dic where dic.dicttypeid='PROCESS_credit_type' 
           	 and dic.dictid in($loanCategoryId$))
      		</isNotNull>
      		</dynamic>
ORDER BY EXECUTION_ID,processName,CUST_NAME,ONECATEGORY,LOANCATEGORY,APPLY_BAL,COORGANIZATION,YXRY, YXRYJG,REPORTCNT asc
  </select>
  
  <!--修改 模式一 的内容-->
  <update id="uptModelOneInfo" parameterClass="com.gotop.jbpm.model.XdProcessTaskAssignee" >
    update T_GENERALPROCESS_MODELONE 
	set CUST_NAME= #custName:VARCHAR#,
	APPLY_BAL= #apply_bal:VARCHAR#,
	ONECATEGORY =  #oneCategory:VARCHAR#,
	LOANCATEGORY = #loanCategory:VARCHAR#,
	COORGANIZATION = #coorganization:VARCHAR#,
	YXRY = #yxry:VARCHAR#,
	YXRYJG = #yxryjg:VARCHAR#
	where  FLOW_ID = #executionId:VARCHAR#
  </update>
    <!--修改 模式三 的报单次数-->
  <update id="uptModelThreeInfo" parameterClass="com.gotop.jbpm.model.XdProcessTaskAssignee" >
    update T_GENERALPROCESS_MODELTHREE 
	set REPORTCNT= #reportcnt:VARCHAR#
	where  FLOW_ID = #executionId:VARCHAR#
  </update>
  <!--修改流程标题-->
  <update id="updateTitle" parameterClass="com.gotop.jbpm.model.XdProcessTaskAssignee" >
  update T_PROCESS_BUSINESS t
   set t.business_title =#businessTitle:VARCHAR#
 where t.execution_id =#executionId:VARCHAR#
 
  </update>
  
   <!--插入 贷款 信息修改 流水表-->
  <insert id="insertWater" parameterClass="com.gotop.jbpm.model.WaterInfo" >
       <selectKey resultClass="long" keyProperty="waterId">
		SELECT t_model_loanUpdateWater_seq.NEXTVAL AS VALUE FROM DUAL
		</selectKey>
   insert into t_model_loanUpdateWater(WATER_ID,FLOW_ID,PROCESS_NAME,CUST_NAME,APPLY_BAL,
ONECATEGORY,LOANCATEGORY,COORGANIZATION,UPT_EMPID,UPT_ORGCODE,UPT_TIME,CYXRY,CYXRYJG,CREPORTCNT)
values(#waterId:DECIMAL:-9999#,  #flow_id:VARCHAR#,  #processName:VARCHAR#,  #custName:VARCHAR#, #apply_bal:VARCHAR#
,  #oneCategory:VARCHAR#,  #loanCategory:VARCHAR#, #coorganization:VARCHAR#,  #uptEmpid:DECIMAL:-9999#, #uptOrgcode:VARCHAR#, 
sysdate,#cyxry:VARCHAR#,#cyxryjg:VARCHAR#,#creportcnt:VARCHAR#)
  </insert>
     <!--插入 第一条贷款 信息修改 流水表-->
  <insert id="insertWaterOne" parameterClass="com.gotop.jbpm.model.WaterInfo" >
       <selectKey resultClass="long" keyProperty="waterId">
		SELECT t_model_loanUpdateWater_seq.NEXTVAL AS VALUE FROM DUAL
		</selectKey>
   insert into t_model_loanUpdateWater(WATER_ID,FLOW_ID,PROCESS_NAME,CUST_NAME,APPLY_BAL,
ONECATEGORY,LOANCATEGORY,COORGANIZATION,UPT_EMPID,UPT_ORGCODE,UPT_TIME,CYXRY,CYXRYJG,CREPORTCNT)
values(#waterId:DECIMAL:-9999#,  #flow_id:VARCHAR#,  #processName:VARCHAR#,  #custName:VARCHAR#, #apply_bal:VARCHAR#
,  #oneCategory:VARCHAR#,  #loanCategory:VARCHAR#, #coorganization:VARCHAR#,  #uptEmpid:DECIMAL:-9999#, #uptOrgcode:VARCHAR#, 
null,#cyxry:VARCHAR#,#cyxryjg:VARCHAR#,#creportcnt:VARCHAR#)
  </insert>
   <!--查询 贷款 信息(模式一)修改 流水 记录-->
  <select id="queryLoanUptWater" resultMap="abatorgenerated_WaterInfo_HashMapResult" parameterClass="java.util.HashMap" >
 select t1.CYXRY,T1.CYXRYJG,T1.CREPORTCNT,t1.WATER_ID, t1.FLOW_ID, t1.PROCESS_NAME, t1.CUST_NAME, t1.APPLY_BAL, t1.ONECATEGORY, 
  t1.LOANCATEGORY, t1.COORGANIZATION, t1.UPT_EMPID, t1.UPT_ORGCODE, t2.empname as UPT_EMPNAME , 
  t3.orgname as UPT_ORGNAME, to_char(t1.UPT_TIME,'yyyy-MM-dd hh24:mm:ss') as UPT_TIME
from t_model_loanUpdateWater t1,om_employee t2, om_organization t3
where t1.upt_empid = t2.empid
and t1.upt_orgcode = t3.orgcode
and t1.flow_id = '$flow_id$'
order by  t1.UPT_TIME desc
  </select>
  
   <!--查询 节点模式工时维护表-->
  <select id="queryWorkTime" resultMap="abatorgenerated_WorkTime_HashMapResult" parameterClass="java.util.HashMap" >
  select * from t_model_workTime where MODEL_TABLENAME = '$model_tableName$'
   </select>
   
   <!--插入 节点模式工时维护表-->
  <insert id="insertWorkTime" parameterClass="com.gotop.jbpm.model.WorkTimeBean" >
       <selectKey resultClass="long" keyProperty="id">
		SELECT t_model_workTime_seq.NEXTVAL AS VALUE FROM DUAL
		</selectKey>
   insert into t_model_workTime(ID,MODEL_TABLENAME,WORKTIME,OP_EMPID,OP_ORGCODE,OP_TIME)
values(#id:DECIMAL:-9999#,  #model_tableName:VARCHAR#,  #workTime:DOUBLE#,  #op_empid:DECIMAL:-9999#, #op_orgcode:VARCHAR#,  sysdate)
  </insert>
  
  <!--修改 节点模式工时维护表-->
  <update id="updateWorkTime" parameterClass="com.gotop.jbpm.model.WorkTimeBean" >
    update t_model_workTime 
	set WORKTIME= #workTime:DOUBLE#,
	OP_EMPID= #op_empid:DECIMAL:-9999#,
	OP_ORGCODE =  #op_orgcode:VARCHAR#,
	OP_TIME = sysdate
	where  MODEL_TABLENAME = #model_tableName:VARCHAR#
  </update>
    <!--查询修改明细-->
  <select id="selectIsfirst" resultClass="int" parameterClass="java.util.HashMap">
 select count(*) 
from t_model_loanUpdateWater 
where 
 flow_id = #flow_id:VARCHAR#
</select>
     <!--查询 贷款 信息(模式一)修改 流水 记录-->
  <select id="query22" parameterClass="com.gotop.jbpm.model.XdProcessTaskAssignee"  resultClass="com.gotop.jbpm.model.XdProcessTaskAssignee">

SELECT
	T11.EXECUTION_ID as executionId,
	T11.processName,
	T11.CUST_NAME as custName,
	T11.ONECATEGORY as oneCategory,
	T11.LOANCATEGORY as loanCategory,
	T11.APPLY_BAL as apply_bal,
	T11.COORGANIZATION as coorganization,
	T11.YXRY as yxry,
	T11.YXRYJG as yxryjg,
	T11.REPORTCNT 
FROM
	(
		SELECT
			T1.EXECUTION_ID,
			t3.PROCESS_NAME AS processName,
			t4.CUST_NAME,
			t4.ONECATEGORY,
			t4.LOANCATEGORY,
			t4.APPLY_BAL,
			t4.COORGANIZATION,
			t4.YXRY,
			t4.YXRYJG,
			t5.REPORTCNT
		FROM
			(
				SELECT
					EXECUTION_ID
				FROM
					T_PROCESS_CONFIG T,
					t_process_business t1,
					JBPM4_HIST_PROCINST t2
				WHERE
					T .definition_id = t2.procdefid_
				AND t2.id_ = t1.execution_id
				AND t1.business_type = '88'
				AND T .state = '01'
			) t1
		LEFT JOIN JBPM4_HIST_PROCINST t2 ON T2.ID_ = T1.EXECUTION_ID
		LEFT JOIN T_PROCESS_CONFIG t3 ON t3.DEFINITION_ID = t2.PROCDEFID_
		LEFT JOIN T_GENERALPROCESS_MODELONE t4 ON T1.EXECUTION_ID = t4.FLOW_ID
		LEFT JOIN T_GENERALPROCESS_MODELTHREE t5 ON T1.EXECUTION_ID = t5.FLOW_ID
	) T11
	where EXECUTION_ID=#executionId:VARCHAR#
  </select>
  
</sqlMap>