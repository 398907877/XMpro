<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="T_LOANRATEFLOATREPORT_SqlMap">
 <resultMap id="LoanRateFloatReport" class="com.gotop.reportjbpm.model.LoanRateFloatReport" >
    <!--Bean方式返回全表-->
    <result column="ORGNAMEONE" property="orgNameOne" jdbcType="VARCHAR" />
    <result column="ORGNAMETWO" property="orgNameTwo" jdbcType="VARCHAR" />
    <result column="ONECATEGORY" property="oneCategory" jdbcType="VARCHAR" />
    <result column="LOANCATEGORY" property="loanCategory" jdbcType="VARCHAR" />
    <result column="CREATOR_NAME" property="creatorName" jdbcType="VARCHAR" />
    <result column="YXZG" property="yyzg" jdbcType="VARCHAR" />
   <result column="NUMS" property="nums" jdbcType="VARCHAR" /> 
    <result column="AMOUNT" property="amount" jdbcType="VARCHAR" />
  </resultMap>
	
	<!-- 查询贷款利率浮动统计 -->
	<select id="queryLoanRateFloatReport" parameterClass="java.util.HashMap" resultMap="LoanRateFloatReport">
select * from	(select TT2.*,
		       o1.orgname as orgnameone,
		       o2.orgname as orgnametwo
		  from (select TT.orgcodeone,
		               TT.orgcodetwo,
		               TT.onecategory,
		               TT.loancategory,
		               TT.creator_name,
		               TT.yxzg,
		               count(*) as nums,
		               sum(TT.apply_bal) as amount
		          from (select M.*,
		                       case
		                         when M.basic_rate_float = '0' then
		                          0
		                         when M.basic_rate_float = '1' then
		                          abs(replace(M.rate_float_scale, '%', ''))
		                         when M.basic_rate_float = '2' then
		                          -1 * abs(replace(M.rate_float_scale, '%', ''))
		                       end as basic_rate,
		                       decode(N.time1, NULL, P.time2, N.time1) as makeLoans_Date
		                
		                  from (select g1.execution_id,
		                               g1.orgcodeone,
		                               g1.orgcodetwo,
		                               g1.onecategory,
		                               g1.loancategory,
		                               g1.creator_name,
		                               g1.yxzg,
		                               g1.apply_bal,
		                               decode(g1.basic_rate_float,
		                                      NULL,
		                                      g6.basic_rate_float,
		                                      g1.basic_rate_float) AS basic_rate_float,
		                               decode(g1.rate_float_scale,
		                                      NULL,
		                                      g6.rate_float_scale,
		                                      g1.rate_float_scale) AS rate_float_scale
		                        
		                          from (select t1.execution_id,
		                                       t4.orgcodeone,
		                                       t4.orgcodetwo,
		                                       t4.onecategory,
		                                       t4.loancategory,
		                                       e.empname  as creator_name,
		                                       t4.yxzg,
		                                       t4.apply_bal,
		                                       t4.basic_rate_float,
		                                       t4.rate_float_scale
		                                  from T_PROCESS_BUSINESS        t1,
		                                       JBPM4_HIST_PROCINST       t2,
		                                       T_PROCESS_CONFIG          t3,
		                                       T_GENERALPROCESS_MODELONE t4,
		                                       om_employee e
		                                 where t1.execution_id = t2.id_
		                                   and t2.procdefid_ = t3.definition_id
		                                   and t1.execution_id = t4.flow_id
		                                   and t4.creator = e.empid
		                                   and t1.business_type = '88'
		                                   and t3.state = '01'
		                                   and t4.orgcodetwo is not null) g1
		                          left join T_GENERALPROCESS_MODELSIX g6
		                            on g1.execution_id = g6.flow_id) M,
		                            
		                (select T.execution_,
		                        to_char(T.END_, 'yyyy-mm-dd') as time1
		                   from (SELECT ac.*,
		                                row_number() over(partition by ac.execution_ order by end_ desc) as rn
		                           FROM JBPM4_HIST_ACTINST ac
		                          where ac.activity_name_ = '放款操作') T
		                  where T.rn = 1) N,
		                  
		                  (select T.execution_,
                            to_char(T.END_, 'yyyy-mm-dd') as time2
                       from (SELECT ac.*,
                                    row_number() over(partition by ac.execution_ order by end_ desc) as rn
                               FROM JBPM4_HIST_ACTINST ac
                              where ac.activity_name_ = '额度生效') T
                      where T.rn = 1) P
		                  
		                    where M.execution_id = N.execution_(+)  and M.execution_id = P.execution_(+)    ) TT
		                    where 1=1
		                    <isNotNull prepend="and" property="orgCodeOne" >
						           TT.ORGCODEONE = '$orgCodeOne$'
						      </isNotNull>
						      <isNotNull prepend="and" property="orgCodeTwo" >
						           TT.ORGCODETWO = '$orgCodeTwo$'
						      </isNotNull>
						      <isNotNull prepend="and" property="oneCategory" >
						            TT.ONECATEGORY in(select dic.dictname from eos_dict_entry dic where dic.dicttypeid='PROCESS_onecategory' 
						           	 and dic.dictid in($oneCategory$))
						      </isNotNull>
						      <isNotNull prepend="and" property="loanCategory" >
						          TT.LOANCATEGORY in(select dic.dictname from eos_dict_entry dic where dic.dicttypeid='PROCESS_credit_type' 
						           	 and dic.dictid in($loanCategory$))
						      </isNotNull>
						      <isNotNull prepend="and" property="creatorName" >
						           TT.CREATOR_NAME like '%'||'$creatorName$'||'%'
						      </isNotNull>
						      <isNotNull prepend="and" property="yxzg" >
						           TT.YXZG like '%'||'$yxzg$'||'%'
						      </isNotNull>
						      <isNotNull prepend="and" property="rateStart" >
						         <![CDATA[ TT.BASIC_RATE>=#rateStart#]]>
						      </isNotNull>
						      <isNotNull prepend="and" property="rateEnd" >
						         <![CDATA[ TT.BASIC_RATE<=#rateEnd#]]>
						      </isNotNull>
						      <isNotNull prepend="and" property="startTime" >
						         <![CDATA[
						            TT.MAKELOANS_DATE >= '$startTime$'
						               ]]>
						      </isNotNull>
						      <isNotNull prepend="and" property="endTime" >
						        <![CDATA[
						            TT.MAKELOANS_DATE <= '$endTime$'
						               ]]>
						      </isNotNull>
						      
						      <isNull property="orgCodeOne" >
						      	 <isNull property="orgCodeTwo" >
						      	    <isNotNull prepend="and" property="defaultOrgcode" >
						           TT.ORGCODETWO in(select orgcode from om_organization start with orgcode='$defaultOrgcode$' connect by prior orgid = parentorgid)
						            </isNotNull>
						           </isNull>
						      </isNull>
						      
		         group by TT.orgcodeone,
		                  TT.orgcodetwo,
		                  TT.onecategory,
		                  TT.loancategory,
		                  TT.creator_name,
		                  TT.yxzg) TT2,
		       om_organization o1,
		       om_organization o2
		 where TT2.orgcodeone = o1.orgcode
		   and TT2.orgcodetwo = o2.orgcode
		   )
		 order by orgnameone,
			          orgnametwo,
			          onecategory,
			          loancategory,
			          creator_name,
			          yxzg
	</select>
	
	<select id="queryOrgInfoById"  parameterClass="java.lang.String" resultClass="java.util.HashMap">
	select * from om_organization where orgid= '$orgid$'
	</select>
	
	<select id="yesOrNot_dep"   parameterClass="java.lang.String" resultClass="java.util.HashMap">
	<![CDATA[
	select o.*,
	case when parentorgid = 5425 and orgname <> '一类支行'
	  then 'yes'
	    else 'no'
	      end as is_dep
	 from om_organization o
  where o.orgcode = '$orgcode$'
	
	   ]]>
	</select>

</sqlMap>