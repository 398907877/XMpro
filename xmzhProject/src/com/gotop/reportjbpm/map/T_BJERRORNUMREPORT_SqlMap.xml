<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="T_BJERRORNUMREPORT_SqlMap">
 <resultMap id="BjErrorNumReport" class="com.gotop.reportjbpm.model.BjErrorNumReport" >
    <!--Bean方式返回全表-->
    <result column="ORGNAMEONE" property="orgNameOne" jdbcType="VARCHAR" />
    <result column="ORGNAMETWO" property="orgNameTwo" jdbcType="VARCHAR" />
    <result column="ONECATEGORY" property="oneCategory" jdbcType="VARCHAR" />
    <result column="LOANCATEGORY" property="loanCategory" jdbcType="VARCHAR" />
    <result column="AVERAGECOUNT" property="averageCount" jdbcType="DOUBLE" />
  </resultMap>
	
	<!-- 笔均差错数统计 -->
	<select id="queryBjErrorNumReport" parameterClass="java.util.HashMap" resultMap="BjErrorNumReport">
			/* WUJIAJUN MAKE */
	select a4.orgname as ORGNAMEONE, a5.orgname as ORGNAMETWO, a3.ONECATEGORY, a3.LOANCATEGORY, a3.AVERAGECOUNT
		from 	
				(SELECT
				   round(SUM (MISCOUNT) / COUNT (FLOW_ID),2)  AS AVERAGECOUNT,
				  MAX (ORGCODEONE) as ORGCODEONE,
				  MAX (ORGCODETWO) as ORGCODETWO,
				  MAX (ONECATEGORY) as ONECATEGORY,
				  MAX (LOANCATEGORY) as LOANCATEGORY
				FROM
				  ( select a1.* from
				    (/* 计算出满足流程的！  所有流程 有多少差错！  下一步，汇总mis/count  */
				    SELECT
				      t5.FLOW_ID,
				      T5.ORGCODEONE,
				      T5.ORGCODETWO,
				      T5.ONECATEGORY,
				      T5.LOANCATEGORY,
				      T4.MISCOUNT,
				      T9.REPORTTIME
				    FROM
				      (
				        SELECT
				          FLOWID,
				          COUNT (T8.MISTAKEID) AS MISCOUNT
				        FROM
				          (
				            /* 关联出所有的 差错 然后做汇总 */
				            SELECT
				              T6.*, T7.MISTAKEID
				            FROM
				              (/*--关联到项目信息 一级分行 二级分行  一级分类  贷种分类 --所有的信贷流程。并且是审批通过的*/
								SELECT
									FlowID
								FROM
									(
										SELECT
											t3.execution_id AS FlowID
										FROM
											(
												SELECT
													t1.execution_id,
													t2.OPERATOR_TYPE   
												FROM
													(
														SELECT
															execution_id
														FROM
															t_process_business b 
														left join	(
														select  m5.execution_,m5.end_ as pd_time
														 from (select m4.*, row_number() over(partition by m4.execution_ order by m4.start_) as rn
														    from (select m1.*, m3.activity_name_ as next_task_name
														            from JBPM4_HIST_ACTINST      m1,
														                 T_PROCESS_TASK_ASSIGNEE m2,
														                 JBPM4_HIST_ACTINST      m3
														           where m1.activity_name_ = '收单派单'
														             and m1.end_ is not null
														             and m1.execution_ = m2.execution_id
														             and m1.htask_ = m2.pre_task_id
														             and m2.next_task_id = m3.htask_) m4
														   where m4.next_task_name = '审查一') m5
														   where 1=1
														
														 )tempC
														on
															b.execution_id=tempC.execution_
                                                            where b.BUSINESS_TYPE = '88'
                                                            <isNotNull prepend="and" property="repTimeStrat" >
												         <![CDATA[
												            to_char(tempC.pd_time, 'yyyy-MM-dd') >= #repTimeStrat#
												               ]]>
												      </isNotNull>
												      <isNotNull prepend="and" property="repTimeEnd" >
												        <![CDATA[
												            to_char(tempC.pd_time, 'yyyy-MM-dd') <=  #repTimeEnd#
												               ]]>
												      </isNotNull>
													) t1
												LEFT JOIN T_APPROVE_OPNINION_GP t2 ON T1.execution_id = T2.FLOW_ID
											) t3
										WHERE
											T3.OPERATOR_TYPE = '提交发起合同预审'
										
									)
								GROUP BY
									FlowID ) t6
				            LEFT JOIN T_GENERALPROCESS_MISTAKE t7 ON T6.FLOWID = T7.FLOW_ID
				          ) T8
				        GROUP BY
				          T8.FLOWID
				      ) t4
				    LEFT JOIN T_GENERALPROCESS_MODELONE t5 ON T4.FLOWID = T5.FLOW_ID
				    LEFT JOIN T_GENERALPROCESS_MODELTHREE t9 ON T4.FLOWID = T9.FLOW_ID 
				    ) a1  
				    where 1=1
				       <!-- <isNotNull prepend="and" property="repTimeStrat" >
		                    <![CDATA[  a1.REPORTTIME  >= '$repTimeStrat$'     ]]>
		               </isNotNull>
		               <isNotNull prepend="and" property="repTimeEnd" >                                    
		                    <![CDATA[  a1.REPORTTIME  <= '$repTimeEnd$'   ]]>
		               </isNotNull> -->
		               <isNotNull prepend="and" property="orgCodeOne" >
		                    a1.ORGCODEONE = '$orgCodeOne$'
		               </isNotNull>
		              <isNotNull prepend="and" property="orgCodeTwo" >
		                   a1.ORGCODETWO = '$orgCodeTwo$'
		              </isNotNull>
		              <isNotNull prepend="and" property="oneCategory" >
		                    a1.ONECATEGORY in(select dic.dictname from eos_dict_entry dic where dic.dicttypeid='PROCESS_onecategory' 
		                     and dic.dictid in($oneCategory$))
		              </isNotNull>
		              <isNotNull prepend="and" property="loanCategory" >
		                  a1.LOANCATEGORY in(select dic.dictname from eos_dict_entry dic where dic.dicttypeid='PROCESS_credit_type' 
		                     and dic.dictid in($loanCategory$))
		              </isNotNull>
				    
				  ) a2
				GROUP BY
				  orgcodeone,
				  ORGCODETWO,
				  ONECATEGORY,
				  LOANCATEGORY  )  a3, 
				   om_organization a4, om_organization a5
   			where a3.orgcodeone = a4.orgcode(+) and a3.orgcodetwo = a5.orgcode(+)

	</select>

</sqlMap>