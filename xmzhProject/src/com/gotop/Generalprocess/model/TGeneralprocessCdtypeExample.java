package com.gotop.Generalprocess.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.apache.log4j.Logger;

public class TGeneralprocessCdtypeExample {
    /**
     * 
     * @abatorgenerated
     */
    protected Logger log = Logger.getLogger(TGeneralprocessCdtypeExample.class);

    /**
     * 排序字段.
     * @abatorgenerated
     */
    protected String orderByClause;

    /**
     * sql条件.
     * @abatorgenerated
     */
    protected List oredCriteria;

    /**
     * 分页查询的起始行数.
     * @abatorgenerated
     */
    private Integer oracleStart;

    /**
     * 分页查询结束行数.
     * @abatorgenerated
     */
    private Integer oracleEnd;

    /** * @abatorgenerated  */
    public TGeneralprocessCdtypeExample() {
        oredCriteria = new ArrayList();
    }

    /** * @abatorgenerated  */
    protected TGeneralprocessCdtypeExample(TGeneralprocessCdtypeExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
        this.oracleStart = example.oracleStart;
        this.oracleEnd = example.oracleEnd;
    }

    /** * @abatorgenerated  */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /** * @abatorgenerated  */
    /** * @abatorgenerated  */
    public String getOrderByClause() {
        return orderByClause;
    }

    /** * @abatorgenerated  */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /** * @abatorgenerated  */
    public Integer getOracleStart() {
        return oracleStart;
    }

    /** * @abatorgenerated  */
    public void setOracleStart(Integer oracleStart) {
        this.oracleStart = oracleStart;
    }

    /** * @abatorgenerated  */
    public Integer getOracleEnd() {
        return oracleEnd;
    }

    /** * @abatorgenerated  */
    public void setOracleEnd(Integer oracleEnd) {
        this.oracleEnd = oracleEnd;
    }

    /**
     * 增加整个新查询条件(Criteria)，增加后以or方式查询.
     * @abatorgenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * 创新新Criteria，如果为第一个则加入到Criteria列表。并且返回
     * @abatorgenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * 仅创新新Criteria,并且返回
     * @abatorgenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * 清除查询条件
     * @abatorgenerated
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Abator for iBATIS.
     * This class corresponds to the database table T_GENERALPROCESS_CDTYPE
     *
     * @abatorgenerated 
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andCdtypeidIsNull() {
            addCriterion("CDTYPEID is null");
            return this;
        }

        public Criteria andCdtypeidIsNotNull() {
            addCriterion("CDTYPEID is not null");
            return this;
        }

        public Criteria andCdtypeidEqualTo(BigDecimal value) {
            addCriterion("CDTYPEID =", value, "cdtypeid");
            return this;
        }

        public Criteria andCdtypeidNotEqualTo(BigDecimal value) {
            addCriterion("CDTYPEID <>", value, "cdtypeid");
            return this;
        }

        public Criteria andCdtypeidGreaterThan(BigDecimal value) {
            addCriterion("CDTYPEID >", value, "cdtypeid");
            return this;
        }

        public Criteria andCdtypeidGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("CDTYPEID >=", value, "cdtypeid");
            return this;
        }

        public Criteria andCdtypeidLessThan(BigDecimal value) {
            addCriterion("CDTYPEID <", value, "cdtypeid");
            return this;
        }

        public Criteria andCdtypeidLessThanOrEqualTo(BigDecimal value) {
            addCriterion("CDTYPEID <=", value, "cdtypeid");
            return this;
        }

        public Criteria andCdtypeidIn(List values) {
            addCriterion("CDTYPEID in", values, "cdtypeid");
            return this;
        }

        public Criteria andCdtypeidNotIn(List values) {
            addCriterion("CDTYPEID not in", values, "cdtypeid");
            return this;
        }

        public Criteria andCdtypeidBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("CDTYPEID between", value1, value2, "cdtypeid");
            return this;
        }

        public Criteria andCdtypeidNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("CDTYPEID not between", value1, value2, "cdtypeid");
            return this;
        }

        public Criteria andProcessNameIsNull() {
            addCriterion("PROCESS_NAME is null");
            return this;
        }

        public Criteria andProcessNameIsNotNull() {
            addCriterion("PROCESS_NAME is not null");
            return this;
        }

        public Criteria andProcessNameEqualTo(String value) {
            addCriterion("PROCESS_NAME =", value, "processName");
            return this;
        }

        public Criteria andProcessNameNotEqualTo(String value) {
            addCriterion("PROCESS_NAME <>", value, "processName");
            return this;
        }

        public Criteria andProcessNameGreaterThan(String value) {
            addCriterion("PROCESS_NAME >", value, "processName");
            return this;
        }

        public Criteria andProcessNameGreaterThanOrEqualTo(String value) {
            addCriterion("PROCESS_NAME >=", value, "processName");
            return this;
        }

        public Criteria andProcessNameLessThan(String value) {
            addCriterion("PROCESS_NAME <", value, "processName");
            return this;
        }

        public Criteria andProcessNameLessThanOrEqualTo(String value) {
            addCriterion("PROCESS_NAME <=", value, "processName");
            return this;
        }

        public Criteria andProcessNameLike(String value) {
            addCriterion("PROCESS_NAME like", value, "processName");
            return this;
        }

        public Criteria andProcessNameNotLike(String value) {
            addCriterion("PROCESS_NAME not like", value, "processName");
            return this;
        }

        public Criteria andProcessNameIn(List values) {
            addCriterion("PROCESS_NAME in", values, "processName");
            return this;
        }

        public Criteria andProcessNameNotIn(List values) {
            addCriterion("PROCESS_NAME not in", values, "processName");
            return this;
        }

        public Criteria andProcessNameBetween(String value1, String value2) {
            addCriterion("PROCESS_NAME between", value1, value2, "processName");
            return this;
        }

        public Criteria andProcessNameNotBetween(String value1, String value2) {
            addCriterion("PROCESS_NAME not between", value1, value2, "processName");
            return this;
        }

        public Criteria andFirstClassIsNull() {
            addCriterion("FIRST_CLASS is null");
            return this;
        }

        public Criteria andFirstClassIsNotNull() {
            addCriterion("FIRST_CLASS is not null");
            return this;
        }

        public Criteria andFirstClassEqualTo(String value) {
            addCriterion("FIRST_CLASS =", value, "firstClass");
            return this;
        }

        public Criteria andFirstClassNotEqualTo(String value) {
            addCriterion("FIRST_CLASS <>", value, "firstClass");
            return this;
        }

        public Criteria andFirstClassGreaterThan(String value) {
            addCriterion("FIRST_CLASS >", value, "firstClass");
            return this;
        }

        public Criteria andFirstClassGreaterThanOrEqualTo(String value) {
            addCriterion("FIRST_CLASS >=", value, "firstClass");
            return this;
        }

        public Criteria andFirstClassLessThan(String value) {
            addCriterion("FIRST_CLASS <", value, "firstClass");
            return this;
        }

        public Criteria andFirstClassLessThanOrEqualTo(String value) {
            addCriterion("FIRST_CLASS <=", value, "firstClass");
            return this;
        }

        public Criteria andFirstClassLike(String value) {
            addCriterion("FIRST_CLASS like", value, "firstClass");
            return this;
        }

        public Criteria andFirstClassNotLike(String value) {
            addCriterion("FIRST_CLASS not like", value, "firstClass");
            return this;
        }

        public Criteria andFirstClassIn(List values) {
            addCriterion("FIRST_CLASS in", values, "firstClass");
            return this;
        }

        public Criteria andFirstClassNotIn(List values) {
            addCriterion("FIRST_CLASS not in", values, "firstClass");
            return this;
        }

        public Criteria andFirstClassBetween(String value1, String value2) {
            addCriterion("FIRST_CLASS between", value1, value2, "firstClass");
            return this;
        }

        public Criteria andFirstClassNotBetween(String value1, String value2) {
            addCriterion("FIRST_CLASS not between", value1, value2, "firstClass");
            return this;
        }

        public Criteria andCreditTypeIsNull() {
            addCriterion("CREDIT_TYPE is null");
            return this;
        }

        public Criteria andCreditTypeIsNotNull() {
            addCriterion("CREDIT_TYPE is not null");
            return this;
        }

        public Criteria andCreditTypeEqualTo(String value) {
            addCriterion("CREDIT_TYPE =", value, "creditType");
            return this;
        }

        public Criteria andCreditTypeNotEqualTo(String value) {
            addCriterion("CREDIT_TYPE <>", value, "creditType");
            return this;
        }

        public Criteria andCreditTypeGreaterThan(String value) {
            addCriterion("CREDIT_TYPE >", value, "creditType");
            return this;
        }

        public Criteria andCreditTypeGreaterThanOrEqualTo(String value) {
            addCriterion("CREDIT_TYPE >=", value, "creditType");
            return this;
        }

        public Criteria andCreditTypeLessThan(String value) {
            addCriterion("CREDIT_TYPE <", value, "creditType");
            return this;
        }

        public Criteria andCreditTypeLessThanOrEqualTo(String value) {
            addCriterion("CREDIT_TYPE <=", value, "creditType");
            return this;
        }

        public Criteria andCreditTypeLike(String value) {
            addCriterion("CREDIT_TYPE like", value, "creditType");
            return this;
        }

        public Criteria andCreditTypeNotLike(String value) {
            addCriterion("CREDIT_TYPE not like", value, "creditType");
            return this;
        }

        public Criteria andCreditTypeIn(List values) {
            addCriterion("CREDIT_TYPE in", values, "creditType");
            return this;
        }

        public Criteria andCreditTypeNotIn(List values) {
            addCriterion("CREDIT_TYPE not in", values, "creditType");
            return this;
        }

        public Criteria andCreditTypeBetween(String value1, String value2) {
            addCriterion("CREDIT_TYPE between", value1, value2, "creditType");
            return this;
        }

        public Criteria andCreditTypeNotBetween(String value1, String value2) {
            addCriterion("CREDIT_TYPE not between", value1, value2, "creditType");
            return this;
        }

        public Criteria andLimitTimeIsNull() {
            addCriterion("LIMIT_TIME is null");
            return this;
        }

        public Criteria andLimitTimeIsNotNull() {
            addCriterion("LIMIT_TIME is not null");
            return this;
        }

        public Criteria andLimitTimeEqualTo(String value) {
            addCriterion("LIMIT_TIME =", value, "limitTime");
            return this;
        }

        public Criteria andLimitTimeNotEqualTo(String value) {
            addCriterion("LIMIT_TIME <>", value, "limitTime");
            return this;
        }

        public Criteria andLimitTimeGreaterThan(String value) {
            addCriterion("LIMIT_TIME >", value, "limitTime");
            return this;
        }

        public Criteria andLimitTimeGreaterThanOrEqualTo(String value) {
            addCriterion("LIMIT_TIME >=", value, "limitTime");
            return this;
        }

        public Criteria andLimitTimeLessThan(String value) {
            addCriterion("LIMIT_TIME <", value, "limitTime");
            return this;
        }

        public Criteria andLimitTimeLessThanOrEqualTo(String value) {
            addCriterion("LIMIT_TIME <=", value, "limitTime");
            return this;
        }

        public Criteria andLimitTimeLike(String value) {
            addCriterion("LIMIT_TIME like", value, "limitTime");
            return this;
        }

        public Criteria andLimitTimeNotLike(String value) {
            addCriterion("LIMIT_TIME not like", value, "limitTime");
            return this;
        }

        public Criteria andLimitTimeIn(List values) {
            addCriterion("LIMIT_TIME in", values, "limitTime");
            return this;
        }

        public Criteria andLimitTimeNotIn(List values) {
            addCriterion("LIMIT_TIME not in", values, "limitTime");
            return this;
        }

        public Criteria andLimitTimeBetween(String value1, String value2) {
            addCriterion("LIMIT_TIME between", value1, value2, "limitTime");
            return this;
        }

        public Criteria andLimitTimeNotBetween(String value1, String value2) {
            addCriterion("LIMIT_TIME not between", value1, value2, "limitTime");
            return this;
        }
    }
}